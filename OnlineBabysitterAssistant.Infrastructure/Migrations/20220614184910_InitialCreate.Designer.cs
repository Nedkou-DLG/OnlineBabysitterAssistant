// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineBabysitterAssistant.Infrastructure;

#nullable disable

namespace OnlineBabysitterAssistant.Infrastructure.Migrations
{
    [DbContext(typeof(BabysitterContext))]
    [Migration("20220614184910_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BabysitterRecordParentRecord", b =>
                {
                    b.Property<int>("BabysittersId")
                        .HasColumnType("int");

                    b.Property<int>("ParentsId")
                        .HasColumnType("int");

                    b.HasKey("BabysittersId", "ParentsId");

                    b.HasIndex("ParentsId");

                    b.ToTable("BabysitterRecordParentRecord");
                });

            modelBuilder.Entity("OnlineBabysitterAssistant.Domain.Entities.ActivityRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChildId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ChildId");

                    b.ToTable("activites", (string)null);
                });

            modelBuilder.Entity("OnlineBabysitterAssistant.Domain.Entities.ChildRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BabysitterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BabysitterId");

                    b.HasIndex("ParentId");

                    b.ToTable("children", (string)null);
                });

            modelBuilder.Entity("OnlineBabysitterAssistant.Domain.Entities.UserRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("OnlineBabysitterAssistant.Domain.Entities.BabysitterRecord", b =>
                {
                    b.HasBaseType("OnlineBabysitterAssistant.Domain.Entities.UserRecord");

                    b.ToTable("babysitters", (string)null);
                });

            modelBuilder.Entity("OnlineBabysitterAssistant.Domain.Entities.ParentRecord", b =>
                {
                    b.HasBaseType("OnlineBabysitterAssistant.Domain.Entities.UserRecord");

                    b.ToTable("parents", (string)null);
                });

            modelBuilder.Entity("BabysitterRecordParentRecord", b =>
                {
                    b.HasOne("OnlineBabysitterAssistant.Domain.Entities.BabysitterRecord", null)
                        .WithMany()
                        .HasForeignKey("BabysittersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineBabysitterAssistant.Domain.Entities.ParentRecord", null)
                        .WithMany()
                        .HasForeignKey("ParentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineBabysitterAssistant.Domain.Entities.ActivityRecord", b =>
                {
                    b.HasOne("OnlineBabysitterAssistant.Domain.Entities.ChildRecord", "Child")
                        .WithMany("activityRecords")
                        .HasForeignKey("ChildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Child");
                });

            modelBuilder.Entity("OnlineBabysitterAssistant.Domain.Entities.ChildRecord", b =>
                {
                    b.HasOne("OnlineBabysitterAssistant.Domain.Entities.BabysitterRecord", "Babysitter")
                        .WithMany("Children")
                        .HasForeignKey("BabysitterId");

                    b.HasOne("OnlineBabysitterAssistant.Domain.Entities.ParentRecord", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Babysitter");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("OnlineBabysitterAssistant.Domain.Entities.BabysitterRecord", b =>
                {
                    b.HasOne("OnlineBabysitterAssistant.Domain.Entities.UserRecord", null)
                        .WithOne()
                        .HasForeignKey("OnlineBabysitterAssistant.Domain.Entities.BabysitterRecord", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineBabysitterAssistant.Domain.Entities.ParentRecord", b =>
                {
                    b.HasOne("OnlineBabysitterAssistant.Domain.Entities.UserRecord", null)
                        .WithOne()
                        .HasForeignKey("OnlineBabysitterAssistant.Domain.Entities.ParentRecord", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineBabysitterAssistant.Domain.Entities.ChildRecord", b =>
                {
                    b.Navigation("activityRecords");
                });

            modelBuilder.Entity("OnlineBabysitterAssistant.Domain.Entities.BabysitterRecord", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("OnlineBabysitterAssistant.Domain.Entities.ParentRecord", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
